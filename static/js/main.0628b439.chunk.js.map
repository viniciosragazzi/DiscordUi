{"version":3,"sources":["components/Layouts/styles.ts","assets/Pb9.svg","components/ServerButton/styles.ts","components/ServerButton/index.tsx","components/ServerList/styles.ts","components/ServerList/index.tsx","components/ServerName/styles.ts","components/ServerName/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelList/styles.ts","components/ChannelButton/styles.ts","components/ChannelButton/index.tsx","components/ChannelList/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/styles.ts","components/ChannelData/index.tsx","components/Layouts/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["Grid","styled","div","Button","button","props","isHome","hasNotifications","mentions","ServerButton","selected","className","src","Logo","alt","Container","Separator","ServerList","Title","h1","ExpandIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","p","Description","span","ChannelInfo","Category","AddCategoryIcon","Add","InviteIcon","PersonAdd","SettingsIcon","Settings","channelName","ChannelList","ChannelButton","Role","User","Avatar","UserRow","nickname","isBot","UserList","Profile","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","Settingsicon","Userinfo","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","Array","from","keys","map","n","type","placeholder","Layout","UserInfo","createGlobalStyle","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0628b439.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n//SL - Sever List\r\n// SN - Server Name\r\n// CI - Channel Info\r\n// CL - Channel List\r\n// CD - Channel Data\r\n// UL - User List\r\n// UI - User Info\r\nexport const Grid = styled.div`\r\n    display: grid;\r\n    grid-template-columns:71px 240px auto 240px ;\r\n    grid-template-rows:46px auto 52px;\r\n    grid-template-areas:\r\n        'SL SN CI CI'\r\n        'SL CL CD UL'\r\n        'SL UI CD UL'\r\n    ;\r\n    height: 100vh;\r\n`;","export default __webpack_public_path__ + \"static/media/Pb9.fff47e76.svg\";","import styled from 'styled-components';\r\n\r\nimport { Props } from '.';\r\n\r\nexport const Button = styled.button<Props>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-shrink: 0; // NÃ£o espremer o btn\r\n\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 50%;\r\n\r\n  margin-bottom: 8px;\r\n\r\n  background-color: ${(props) =>\r\n    props.isHome ? 'var(--rocketseat)' : 'var(--primary)'};\r\n\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  > img {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n\r\n  &::before {\r\n    width: 9px;\r\n    height: 9px;\r\n\r\n    position: absolute;\r\n    left: -17px;\r\n    top: calc(50% - 4.5px);\r\n\r\n    background-color: var(--white);\r\n    border-radius: 50%;\r\n\r\n    content: '';\r\n    display: ${(props) => (props.hasNotifications ? 'inline' : 'none')};\r\n  }\r\n\r\n  &::after {\r\n    background-color: var(--notification);\r\n    width: auto;\r\n    height: 16px;\r\n\r\n    padding: 0 4px;\r\n\r\n    position: absolute;\r\n    bottom: -4px;\r\n    right: -4px;\r\n\r\n    border-radius: 12px;\r\n    border: 4px solid var(--quaternary);\r\n\r\n    text-align: right;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    color: var(--white);\r\n\r\n    content: '${(props) => props.mentions && props.mentions}';\r\n    display: ${(props) =>\r\n      props.mentions && props.mentions > 0 ? 'inline' : 'none'}\r\n  }\r\n\r\n  transition: border-radius 0.2s, background-color 0.2s;\r\n\r\n  &.active,\r\n  &:hover {\r\n    border-radius: 16px;\r\n    background-color: ${(props) =>\r\n      props.isHome ? 'var(--rocketseat)' : 'var(--discord)'};\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport Logo from '../../assets/Pb9.svg';\r\n\r\nimport { Button } from './styles';\r\n\r\nexport interface Props {\r\n  isHome?: boolean;\r\n  selected?: boolean;\r\n  hasNotifications?: boolean;\r\n  mentions?: number;\r\n}\r\n\r\nconst ServerButton: React.FC<Props> = ({\r\n  isHome,\r\n  hasNotifications,\r\n  selected,\r\n  mentions,\r\n}) => {\r\n  return (\r\n    <Button\r\n      isHome={isHome}\r\n      hasNotifications={hasNotifications}\r\n      mentions={mentions}\r\n      className={selected ? 'active' : ''}\r\n    >\r\n      {isHome && <img src={Logo} alt=\"Rocketseat\" />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ServerButton;","import styled from \"styled-components\";\r\n\r\n//SL - Sever List\r\nexport const Container = styled.div`\r\n    grid-area: SL;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    background-color: var(--tertiary);\r\n    padding: 11px 0;\r\n\r\n    max-height: 100vh;\r\n    overflow-y: scroll;\r\n\r\n        ::-webkit-scrollbar{\r\n            display: none;\r\n    }\r\n`;\r\nexport const ServerList = styled.div`\r\n\r\n`;\r\n\r\nexport const ServerButton = styled.div`\r\n`;\r\nexport const Separator = styled.div`\r\n    width: 32px;\r\n    border-bottom: 2px solid var(--quartenary);\r\n    margin-bottom: 8px;\r\n\r\n`;\r\n\r\n","import React from 'react';\r\n\r\nimport ServerButton from '../ServerButton/index';\r\n\r\nimport { Container, Separator } from './styles';\r\n\r\nconst ServerList: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <ServerButton isHome />\r\n\r\n      <Separator />\r\n\r\n      <ServerButton />\r\n      <ServerButton hasNotifications />\r\n      <ServerButton mentions={3} />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton hasNotifications />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton mentions={72} />\r\n      <ServerButton />\r\n      <ServerButton />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServerList;","import styled from \"styled-components\";\r\nimport { ExpandMore } from 'styled-icons/material'\r\nexport const Container = styled.div`\r\n    background-color: var(--secondary);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 11px 0 16px;\r\n\r\n    box-shadow: rgba(0,0,0,0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`\r\n\r\nexport const Title  = styled.h1`\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    color: var(--white);\r\n`\r\n\r\nexport const ExpandIcon  = styled(ExpandMore)`\r\n    width: 28px;\r\n    color: var(--white);\r\n    cursor: pointer;\r\n`","import React from \"react\";\r\nimport { Container, Title, ExpandIcon } from './styles'\r\n\r\n\r\nconst ServerName: React.FC = () =>{\r\n    return (\r\n        <Container>\r\n            <Title>Rift Server</Title>\r\n            <ExpandIcon/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ServerName;","import styled from \"styled-components\";\r\nimport { Hashtag } from 'styled-icons/heroicons-outline'\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CI;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    padding: 0 17px ;\r\n    background-color: var(--primary);\r\n\r\n    box-shadow: rgba(0,0,0,0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n    width: 24px;\r\n    height: 24px;\r\n\r\n    color: var(--symbol);\r\n`\r\n\r\nexport const Title = styled.p`\r\n\r\n    margin-left: 9px;\r\n    font-size: 16px;\r\n    font-weight: bol;\r\n    color: var(--white);\r\n\r\n`\r\n\r\nexport const Separator = styled.div`\r\n    height: 24px;\r\n    width: 1px;\r\n    background-color: var(--white);\r\n    opacity: .2;\r\n    margin: 0 13px;\r\n`\r\n\r\nexport const Description = styled.span`\r\n    font-size: 15px;\r\n    color: var(--gray);\r\n`","\r\nimport React from \"react\";\r\nimport { Container,HashtagIcon,Title,Separator,Description} from './styles'\r\n\r\n\r\nconst ChannelInfo: React.FC = () =>{\r\n    return (\r\n        <Container>\r\n            <HashtagIcon/>\r\n            <Title>chat-livre</Title>\r\n            <Separator />\r\n            <Description>Canal aberto para conversas</Description>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChannelInfo;","import styled from \"styled-components\";\r\nimport { Add } from \"styled-icons/material\"\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CL;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    padding: 24px 9.5px 0 16px;\r\n    background-color: var(--secondary);\r\n`\r\n\r\nexport const Category = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 6px;\r\n\r\n    > span{\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n        font-weight: 500;\r\n        color: var(--gray);\r\n\r\n    }\r\n`\r\nexport const AddCategoryIcon = styled(Add)`\r\n    width: 21px;\r\n    height: 21px;\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n`\r\n","import styled from \"styled-components\";\r\nimport { Hashtag } from 'styled-icons/heroicons-outline'\r\nimport { PersonAdd, Settings } from 'styled-icons/material'\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content:space-between;\r\n\r\n    cursor:pointer;\r\n    padding:5px 3px;\r\n    border-radius:5px;\r\n    background-color: transparent;\r\n    transition: background-color .2s;\r\n\r\n    > div{\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    > div span{\r\n        color: var(--senary);\r\n        margin-left: 5px;\r\n    }\r\n\r\n    &:hover, &:active{\r\n        background-color: var(--quinary);\r\n\r\n        > div span{\r\n            color: var(--white);\r\n        }\r\n        > div svg{\r\n            display: inline;\r\n        }\r\n    }\r\n\r\n    \r\n`\r\n\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--symbol);\r\n    \r\n`\r\nexport const InviteIcon = styled(PersonAdd)`\r\n    width: 16px;\r\n    height: 16px;\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n    transition: color .2s;\r\n    display: none;\r\n    &:hover{\r\n        color: var(--white);\r\n    }\r\n`\r\nexport const SettingsIcon = styled(Settings)`\r\n    width: 16px;\r\n    height: 16px;\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n    transition: color .2s;\r\n    margin-left: 5px;\r\n    display: none;\r\n    &:hover{\r\n        color: var(--white);\r\n    }\r\n`\r\n","import React from \"react\";\r\nimport { Container,HashtagIcon, InviteIcon,SettingsIcon} from './styles'\r\n\r\nexport interface Props {\r\n    channelName: string;\r\n    selected?: boolean;\r\n\r\n}\r\n\r\nconst ServerName: React.FC<Props> = ({channelName, selected}) =>{\r\n    return (\r\n        <Container className={selected ? 'active' : ''}>\r\n            <div>\r\n                <HashtagIcon />\r\n                <span>\r\n                    {channelName}\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <InviteIcon />\r\n                <SettingsIcon />\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ServerName;","import React from \"react\";\r\nimport { Container, Category, AddCategoryIcon} from './styles'\r\nimport ChannelButton from '../ChannelButton'\r\n\r\nconst ChannelList: React.FC = () =>{\r\n    return (\r\n        <Container>\r\n            <Category>\r\n                <span>Canais de Texto</span>\r\n                <AddCategoryIcon />\r\n            </Category>\r\n\r\n            <ChannelButton channelName=\"chat-livre\" />\r\n            <ChannelButton channelName=\"rift-ReuniÃ£o\" />\r\n            <ChannelButton channelName=\"games\" />\r\n            <ChannelButton channelName=\"informaÃ§Ãµes\" /> \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChannelList;","import styled from \"styled-components\";\r\nexport const Container = styled.div`\r\n    grid-area: UL;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 3px 6px 0 16px ;\r\n    background-color: var(--secondary);\r\n    height: calc(100vh - 46px);\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar{\r\n        width: 4px;\r\n    }\r\n    ::-webkit-scrollbar-thumb{\r\n        background-color: var(--tertiary);\r\n        border-radius: 4px;\r\n    }\r\n    ::-webkit-scrollbar-track{\r\n        background-color: var(--secondary);\r\n    }\r\n`\r\nexport const  Role = styled.span`\r\nmargin-top: 20px;\r\n\r\ntext-transform: uppercase;\r\nfont-size: 12px;\r\nfont-weight: 500;\r\ncolor: var(--gray);\r\n`\r\nexport const User = styled.div`\r\n    display: flex;\r\n    margin-top: 5px;\r\n    padding: 5px;\r\n\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    background: transparent;\r\n\r\n    transition: background .2s;\r\n\r\n    &:hover{\r\n        color: rgba(255,255,255,0.1);\r\n\r\n        background-color: #393D42;\r\n    \r\n    }\r\n\r\n    > strong{\r\n        margin-left: 13px;\r\n        font-weight: 500;\r\n        color: var(--white);\r\n        opacity: 0.7;\r\n\r\n        white-space: nowrap;\r\n\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n    }\r\n    > span{\r\n\r\n        margin-left: 9px;\r\n        background: var(--discord);\r\n        color: var(--white);\r\n        border-radius: 4px;\r\n        padding: 4px 5px;\r\n        text-transform: uppercase; \r\n        font-weight: bold;\r\n        font-size: 11px;\r\n    }\r\n`\r\nexport const Avatar = styled.div`\r\n    flex-shrink: 0;\r\n    width: 32px;\r\n    height: 32px;\r\n\r\n    background-color: var(--primary);\r\n    border-radius: 50%;\r\n\r\n    &.bot{\r\n        background-color: var(--mention-detail);\r\n    }\r\n`\r\n\r\n","import React from \"react\";\r\nimport { Container, Role,User,Avatar} from './styles'\r\n\r\ninterface UserProps{\r\n    nickname: string;\r\n    isBot?: boolean;\r\n}\r\n\r\nconst UserRow: React.FC<UserProps> = ({ nickname, isBot})=>{\r\n    return(\r\n        <User>\r\n            <Avatar className={isBot? 'bot' : ''} />\r\n            <strong>{nickname}</strong>\r\n            {isBot && <span>Bot</span>}\r\n        </User>\r\n    )\r\n}\r\n\r\nconst UserList: React.FC = () =>{\r\n    return (\r\n        <Container>\r\n            <Role>Disponivel - 1</Role>\r\n            <UserRow nickname=\"Vinicios Ragazzi\" />\r\n\r\n            <Role>Offline - 10</Role>\r\n            <UserRow nickname=\"Rift Man\" isBot/>\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserList;","import styled from \"styled-components\";\r\nimport { Mic, Headset, Settings} from 'styled-icons/material'\r\n\r\nexport const Container = styled.div`\r\n    grid-area: UI;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n    background-color: var(--quaternary);\r\n    box-shadow: rgba(0,0,0, 0.2) 0px 1px 0px 0px;\r\n\r\n\r\n`\r\n\r\nexport const Profile = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`\r\nexport const Avatar = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n    background-color: var(--gray);\r\n`\r\nexport const UserData = styled.div`\r\n    margin-left: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    > strong{\r\n        color: var(--white);\r\n        font-size: 13px;\r\n        display: block;\r\n    }\r\n    > span{\r\n        color:var(--gray);\r\n        font-size: 13px;\r\n    }\r\n`\r\nexport const Icons = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    >svg::not(:first-child){\r\n        margin-left: 7px;\r\n    }\r\n\r\n`\r\nexport const MicIcon = styled(Mic)`\r\n   width: 20px;\r\n    height: 20px;\r\n    color: var(--white);\r\n    opacity: .7;\r\n    cursor: pointer;\r\n\r\n    transition: opacity .2s;\r\n\r\n    &:hover{\r\n        opacity: 1;\r\n    }\r\n`\r\nexport const HeadphoneIcon = styled(Headset)`\r\n    width: 20px;\r\n    height: 20px;\r\n    color: var(--white);\r\n    opacity: .7;\r\n    cursor: pointer;\r\n\r\n    transition: opacity .2s;\r\n\r\n    &:hover{\r\n        opacity: 1;\r\n    }\r\n`\r\nexport const Settingsicon = styled(Settings)`\r\n   width: 20px;\r\n    height: 20px;\r\n    color: var(--white);\r\n    opacity: .7;\r\n    cursor: pointer;\r\n\r\n    transition: opacity .2s;\r\n\r\n    &:hover{\r\n        opacity: 1;\r\n    }\r\n`","import React from \"react\";\r\nimport { Container,Profile,Avatar,UserData,Icons,MicIcon,HeadphoneIcon,Settingsicon} from './styles'\r\n\r\n\r\nconst Userinfo: React.FC = () =>{\r\n    return (\r\n        <Container>\r\n            <Profile>\r\n                <Avatar />\r\n                <UserData>\r\n                    <strong>Vinicios Ragazzi</strong>\r\n                    <span>#26401</span>\r\n                </UserData>\r\n            </Profile>\r\n\r\n            <Icons>\r\n                <MicIcon />\r\n                <HeadphoneIcon />\r\n                <Settingsicon />\r\n            </Icons>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Userinfo;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 4px 16px;\r\n    margin-right: 4px;\r\n\r\n    background-color: transparent;\r\n\r\n    &.mention{\r\n        background-color: var(--mention-message);\r\n\r\n        border-left:2px solid var(--mention-detail) ;\r\n        padding-left: 14px;\r\n    }\r\n\r\n    & + div{\r\n        margin-top: 13px;\r\n    }\r\n`\r\nexport const Avatar = styled.div`\r\n    height: 40px;\r\n    width: 40px;\r\n    background-color: var(--secondary);\r\n    border-radius: 50%;\r\n\r\n\r\n    &.bot{\r\n        background-color: var(--mention-detail);\r\n    }\r\n`\r\nexport const Message = styled.div`\r\n    min-height: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    margin-left: 17px;\r\n`\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > strong{\r\n        color: var(--white);\r\n        font-size: 16px;\r\n    }\r\n    > span{\r\n        margin-left: 6px;\r\n        background: var(--discord);\r\n        color: var(--white);\r\n        border-radius: 4px;\r\n        padding: 4px 5px;\r\n        text-transform: uppercase; \r\n        font-weight: bold;\r\n        font-size: 11px;\r\n    }\r\n    > time{\r\n        color: var(--gray);\r\n        font-size: 13px;\r\n        margin-left: 6px;\r\n    }\r\n`\r\nexport const Content = styled.div`\r\n    text-align: left;\r\n    font-size: 16px;\r\n    color: var(--white);\r\n`\r\n\r\nexport const Mention = styled.span`\r\n    color: var(--link);\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        text-decoration: underline;\r\n    }\r\n` ","import React from \"react\";\r\nimport { Container,Avatar,Message,Header,Content } from './styles'\r\nexport { Mention } from \"./styles\"\r\ninterface Props {\r\n    author: string;\r\n    date: string;\r\n    content: string | React.ReactElement | React.ReactNode;\r\n    hasMention?: boolean;\r\n    isBot?: boolean;\r\n} \r\nconst ChannelMessage: React.FC <Props>= ({\r\n    author,\r\n    date, content,\r\n    hasMention,\r\n    isBot\r\n}) =>{\r\n    return (\r\n        <Container className={hasMention ? 'mention' : ''}>\r\n            <Avatar className={isBot ? 'bot' : ''} />\r\n            <Message>\r\n                <Header>\r\n                    <strong>{author}</strong>\r\n                    {isBot && <span>Bot</span>}\r\n\r\n                    <time>{date}</time>\r\n                </Header>\r\n                <Content>\r\n                    {content}\r\n                </Content>\r\n            </Message>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChannelMessage;","import styled from 'styled-components';\r\nimport { AlternateEmail } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CD;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  background-color: var(--primary);\r\n`;\r\n\r\nexport const Messages = styled.div`\r\n  padding: 20px 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  max-height: calc(100vh - 46px - 68px);\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: var(--tertiary);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background-color: var(--secondary);\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  width: 100%;\r\n\r\n  padding: 0 16px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 44px;\r\n\r\n  padding: 0 10px 0 57px;\r\n  border-radius: 7px;\r\n\r\n  color: var(--white);\r\n  background-color: var(--chat-input);\r\n\r\n  position: relative;\r\n\r\n  &::placeholder {\r\n    color: var(--gray);\r\n  }\r\n\r\n  ~ svg {\r\n    position: relative;\r\n    top: -50%;\r\n    left: 14px;\r\n    transition: 180ms ease-in-out;\r\n  }\r\n`;\r\n\r\nexport const InputIcon = styled(AlternateEmail)`\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  color: var(--gray);\r\n`;","import React, {useRef, useEffect} from \"react\";\r\nimport ChannelMessage, {Mention} from \"../ChannelMessage\"\r\nimport { Container,Messages,InputWrapper,InputIcon,Input} from './styles'\r\n\r\n\r\nconst ChannelData: React.FC = () =>{\r\n    const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n    \r\n    useEffect(()=>{\r\n        const div = messagesRef.current;\r\n\r\n        if (div) {\r\n            div.scrollTop = div.scrollHeight;\r\n        }\r\n    }, [messagesRef]);\r\n\r\n    return (\r\n        <Container>\r\n            <Messages>\r\n                {Array.from(Array(15).keys()).map((n)=>(\r\n                    <ChannelMessage \r\n                    key={n}\r\n                    author=\"Vinicios Ragazzi\"\r\n                    date=\"12/11/2021\"\r\n                    content=\"Mensagem enviada!\"\r\n                />\r\n                ))}\r\n                 <ChannelMessage \r\n                    author=\"Vinicios Ragazzi\"\r\n                    date=\"12/11/2021\"\r\n                    content={\r\n                        <>\r\n                            <Mention> @Vinicios Ragazzi </Mention>, me carrega no Vava ai mlk!\r\n                        </>\r\n                    }\r\n                    hasMention\r\n                    isBot\r\n                /> \r\n            </Messages>\r\n\r\n            <InputWrapper>\r\n                <Input type=\"text\" placeholder=\"Conversar em #chat-livre\"/>\r\n                <InputIcon />\r\n            </InputWrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChannelData;","import React from \"react\";\r\nimport { Grid } from './styles'\r\nimport ServerList  from \"../ServerList\";\r\nimport ServerName  from \"../ServerName\";\r\nimport ChannelInfo  from \"../ChannelInfo\";\r\nimport ChannelList  from \"../ChannelList\";\r\nimport UserList  from \"../UserList\";\r\nimport UserInfo  from \"../UserInfo\";\r\nimport ChannelData  from \"../ChannelData\";\r\n//  export default function Layout(){ -- Js Version\r\n//     return(\r\n//         <div>Ola Mundo</div>\r\n//     )\r\n// }\r\n\r\nconst Layout: React.FC = () =>{\r\n    return (\r\n        <Grid>\r\n            <ServerList/>\r\n            <ServerName/>\r\n            <ChannelInfo/>\r\n            <ChannelList/>\r\n            <UserInfo/>\r\n            <ChannelData/>\r\n            <UserList/>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Layout;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle `\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    html, body, #root{\r\n        height: 100%;\r\n    }\r\n    *, button, input{\r\n        border: 0;\r\n        outline: 0;\r\n        font-family: Roboto, sans-serif;\r\n    }\r\n    :root {\r\n    --primary: #36393f;\r\n    --secondary: #2f3136;\r\n    --tertiary: rgb(32,34,37);\r\n    --quaternary: #292b2f;\r\n    --quinary: #393d42;\r\n    --senary: #828386;\r\n \r\n    --white: #fff;\r\n    --gray: #8a8c90;\r\n    --chat-input: rgb(64,68,75);\r\n    --symbol: #74777a;\r\n \r\n    --notification: #f84a4b;\r\n    --discord: #6e86d6;\r\n    --mention-detail: #f9a839;\r\n    --mention-message: #413f3f;\r\n \r\n    --link: #5d80d6;\r\n \r\n    --rocketseat: #6633cc;\r\n  }\r\n`;","import React from 'react';\nimport Layout from './components/Layouts';\nimport GlobalStyles from './styles/GlobalStyles';\n\n\nfunction App() {\n  return (\n    <>\n      <Layout />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}